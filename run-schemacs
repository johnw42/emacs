#! /bin/bash

export EMACSLOADPATH=
cd src
if make -j temacs; then
  # EMACS_CMD="src/emacs --batch"
  #EMACS_CMD="src/temacs --batch --load loadup"

  cd ../lisp
  EMACS_CMD=(../src/temacs --batch --load loadup)
  
  GDB=false
  if [[ $TERM != dumb ]]; then
    GDB="gdb -ex r --args"
  fi

  echo "${EMACS_CMD[*]}"
  #"${EMACS_CMD[@]}" ||
    $GDB "${EMACS_CMD[@]}"

  # cd lisp
  # for lisp_file in autoload.el; do
  #   EMACS_CMD=('./bootstrap-emacs' --batch --no-site-file --no-site-lisp --eval '(setq load-prefer-newer t)'  -f batch-byte-compile ../lisp/emacs-lisp/$lisp_file)
  #   echo "${EMACS_CMD[*]}"
  #   "${EMACS_CMD[@]}" || $GDB "${EMACS_CMD[@]}"
  # done
  
#   $GDB $EMACS_CMD --eval \
#     "
# (progn
#  (setq garbage-collection-messages t)
#  (message \"after-idle: %S\"
#    (prog1 (scheme-funcall 'after-idle (cons nil nil))
#    (garbage-collect))))"
  #src/emacs -Q --batch --eval "(message \"after-idle: %S\" (scheme-funcall 'after-idle))"
fi
